<?xml version="1.0"?>
<!--

    Copyright (C) 2009 Mark Michaelis <thragor_at_gmx.net>

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<module
  name="Checker">

  <!-- Checks that a package.html file exists for each package.     -->
  <!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
  <module
    name="PackageHtml" />

  <!--
		Checks whether files end with a new line.
	-->
  <!--
		See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile
	-->
  <module
    name="NewlineAtEndOfFile" />

  <!-- Checks that property files contain the same keys.         -->
  <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
  <module
    name="Translation" />


  <module
    name="TreeWalker">

    <property
      name="cacheFile"
      value="${checkstyle.cache.file}" />

    <!-- Checks for Javadoc comments.                     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
    <module
      name="JavadocMethod" />
    <module
      name="JavadocType" />
    <module
      name="JavadocVariable" />
    <module
      name="JavadocStyle" />


    <!-- Checks for Naming Conventions.                  -->
    <!-- See http://checkstyle.sf.net/config_naming.html -->
    <module
      name="ConstantName" />
    <module
      name="LocalFinalVariableName" />
    <module
      name="LocalVariableName" />
    <module
      name="MemberName" />
    <module
      name="MethodName" />
    <module
      name="PackageName" />
    <module
      name="ParameterName" />
    <module
      name="StaticVariableName" />
    <module
      name="TypeName" />


    <!-- Checks for Headers                                -->
    <!-- See http://checkstyle.sf.net/config_header.html   -->
    <!-- <module name="Header">                            -->
    <!-- The follow property value demonstrates the ability     -->
    <!-- to have access to ANT properties. In this case it uses -->
    <!-- the ${basedir} property to allow Checkstyle to be run  -->
    <!-- from any directory within a project. See property      -->
    <!-- expansion,                                             -->
    <!-- http://checkstyle.sf.net/config.html#properties        -->
    <!-- <property                                              -->
    <!--     name="headerFile"                                  -->
    <!--     value="${basedir}/java.header"/>                   -->
    <!-- </module> -->

    <!-- Following interprets the header file as regular expressions. -->
    <!-- <module name="RegexpHeader"/>                                -->


    <!-- Checks for imports                              -->
    <!-- See http://checkstyle.sf.net/config_import.html -->
    <module
      name="AvoidStarImport" />
    <module
      name="IllegalImport" /> <!-- defaults to sun.* packages -->
    <module
      name="RedundantImport" />
    <module
      name="UnusedImports" />


    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module
      name="FileLength" />
    <module
      name="LineLength">
      <property
        name="max"
        value="120" />
      <property
        name="ignorePattern"
        value="^ *\* *[^ ]*$" />
    </module>
    <module
      name="MethodLength" />
    <module
      name="ParameterNumber" />


    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module
      name="EmptyForIteratorPad" />
    <module
      name="MethodParamPad" />
    <module
      name="NoWhitespaceAfter">
      <!-- Default tokens and additional GENERIC_START -->
      <property
        name="tokens"
        value="ARRAY_INIT, BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS, GENERIC_START" />
    </module>
    <module
      name="NoWhitespaceBefore">
      <!-- Default tokens and additional GENERIC_START and GENERIC_END -->
      <property
        name="tokens"
        value="SEMI, POST_DEC, POST_INC, GENERIC_START, GENERIC_END" />
    </module>
    <module
      name="OperatorWrap" />
    <module
      name="ParenPad" />
    <module
      name="TypecastParenPad" />
    <module
      name="TabCharacter" />
    <module
      name="WhitespaceAfter">
      <!-- Default tokens and additional GENERIC_END -->
      <property
        name="tokens"
        value="COMMA, SEMI, TYPECAST, GENERIC_END" />
    </module>
    <module
      name="WhitespaceAround">
      <!-- Default tokens without GENERIC_START and GENERIC_END -->
      <property
        name="tokens"
        value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN,
COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,
LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,
MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, TYPE_EXTENSION_AND, WILDCARD_TYPE" />
    </module>


    <!-- Modifier Checks                                    -->
    <!-- See http://checkstyle.sf.net/config_modifiers.html -->
    <module
      name="ModifierOrder" />
    <module
      name="RedundantModifier" />


    <!-- Checks for blocks. You know, those {}'s         -->
    <!-- See http://checkstyle.sf.net/config_blocks.html -->
    <module
      name="AvoidNestedBlocks" />
    <module
      name="EmptyBlock" />
    <module
      name="LeftCurly" />
    <module
      name="NeedBraces" />
    <module
      name="RightCurly">
      <property
        name="option"
        value="alone" />
      <property
        name="tokens"
        value="LITERAL_ELSE" />
    </module>

    <!-- Checks for common coding problems               -->
    <!-- See http://checkstyle.sf.net/config_coding.html -->
    <module
      name="AvoidInlineConditionals" />
    <module
      name="DoubleCheckedLocking" />    <!-- MY FAVOURITE -->
    <module
      name="EmptyStatement" />
    <module
      name="EqualsHashCode" />
    <module
      name="HiddenField">
      <property
        name="ignoreSetter"
        value="true" />
    </module>
    <module
      name="IllegalInstantiation" />
    <module
      name="InnerAssignment" />
    <module
      name="MagicNumber" />
    <module
      name="MissingSwitchDefault" />
    <module
      name="RedundantThrows">
      <property
        name="allowUnchecked"
        value="true" />
    </module>
    <module
      name="SimplifyBooleanExpression" />
    <module
      name="SimplifyBooleanReturn" />
    <module
      name="FinalLocalVariable">
      <property
        name="tokens"
        value="VARIABLE_DEF,PARAMETER_DEF" />
    </module>

    <!-- Checks for class design                         -->
    <!-- See http://checkstyle.sf.net/config_design.html -->
    <!-- Disabled DesignForExtension as it caused problems when modifying classes for testability. -->
    <!--
		<module name="DesignForExtension" />
		-->
    <module
      name="FinalClass" />
    <module
      name="HideUtilityClassConstructor" />
    <module
      name="InterfaceIsType" />
    <module
      name="VisibilityModifier" />


    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module
      name="ArrayTypeStyle" />
    <module
      name="FinalParameters" />
    <module
      name="GenericIllegalRegexp">
      <property
        name="format"
        value="\s+$" />
      <property
        name="ignoreComments"
        value="true" />
      <property
        name="message"
        value="Line has trailing spaces." />
    </module>
    <module
      name="TodoComment" />
    <module
      name="UpperEll" />

  </module>

</module>
